@using Blazor_FoodAppWeb.Data
@inject Blazor_FoodAppWeb.IService.IOrder orderService
@page "/rpOrder"

<style>
    /*  import google fonts */
    import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");
    * {
        margin: 0;
        padding: 0;
        outline: none;
        border: none;
        text-decoration: none;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
    }

    body {
        background: rgb(226, 226, 226);
    }

    .main {
        position: relative;
        padding: 20px;
        width: 100%;
    }

    .main-top {
        display: flex;
        width: 100%;
    }

        .main-top i {
            position: absolute;
            right: 0;
            margin: 10px 30px;
            color: rgb(110, 109, 109);
            cursor: pointer;
        }

    .main .users {
        display: flex;
        width: 100%;
    }

    .users .card {
        width: 25%;
        margin: 10px;
        background: #fff;
        text-align: center;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0 20px 35px rgba(0, 0, 0, 0.1);
    }

        .users .card img {
            width: 70px;
            height: 70px;
            border-radius: 50%;
        }

        .users .card h4 {
            text-transform: uppercase;
        }

        .users .card p {
            font-size: 12px;
            margin-bottom: 15px;
            text-transform: uppercase;
        }

    .users table {
        margin: auto;
    }

    .users .per span {
        padding: 5px;
        border-radius: 10px;
        background: rgb(223, 223, 223);
    }

    .users td {
        font-size: 14px;
        padding-right: 15px;
    }

    .users .card button {
        width: 100%;
        margin-top: 8px;
        padding: 7px;
        cursor: pointer;
        border-radius: 10px;
        background: transparent;
        border: 1px solid #F24E1E;
    }

        .users .card button:hover {
            background: #F24E1E;
            color: #fff;
            transition: 0.5s;
        }

    /*Orders List section  */
    .Orders {
        margin-top: 20px;
        text-transform: capitalize;
    }

    .Orders-list {
        width: 100%;
        padding: 10px;
        margin-top: 10px;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 20px 35px rgba(0, 0, 0, 0.1);
    }

    .table {
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 15px;
        min-width: 100%;
        overflow: hidden;
        border-radius: 5px 5px 0 0;
    }

    table thead tr {
        color: #fff;
        background: #F24E1E;
        text-align: left;
        font-weight: bold;
    }

    .table th,
    .table td {
        padding: 12px 15px;
    }

    .table tbody tr {
        border-bottom: 1px solid #ddd;
    }

        .table tbody tr:nth-of-type(odd) {
            background: #f3f3f3;
        }

        .table tbody tr.active {
            font-weight: bold;
            color: #F24E1E;
        }

        .table tbody tr:last-of-type {
            border-bottom: 2px solid #F24E1E;
        }

    .table button {
        padding: 6px 20px;
        border-radius: 10px;
        cursor: pointer;
        background: transparent;
        border: 1px solid #F24E1E;
    }

        .table button:hover {
            background: #F24E1E;
            color: #fff;
            transition: 0.5rem;
        }
        
    .searchBoxContainer{
        width:400px;
        padding:7px;
        flex-direction:row;
        display: flex;
    }
    
    .searchBox{
        width: 100%;
        height: 30px;
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 5px;
    }
    
    .imgSearch{
        width: 20px;
        height: 20px;
        color:#2b2b2b;
    }
</style>


<head>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="style.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
</head>
<body>
    <div class="container">
        <section class="main">

            <section class="Orders">
                <div class="Orders-list">
                    <h1>Reports - Orders</h1>
                    
                    <div class="searchBoxContainer">
                        <img src="/Images/search.png" class="imgSearch"/>
                        <input class="searchBox border-4 w-1/3 border-blue-300" placeholder="Search..." />
                    </div>

                    <table class="table">
                        <thead>
                            <tr>
                                <th>Order Date</th>
                                <th>Address</th>
                                <th>Amount</th>
                                <th>Status</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (orders.Count() > 0)
                            {
                                @foreach (var ord in orders)
                                {
                                    <tr>
                                        <td>@ord.Date</td>
                                        <td>@ord.Address</td>
                                        <td>@ord.Amount</td>
                                        <td>@ord.Status</td>
                                        <td>
                                            <button class="btn btn-primary" @onclick="@(e => Edit(@ord.Id))">Edit</button>
                                            <button class="btn btn-danger" @onclick="@(e => Delete(@ord.Id))">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </section>
        </section>
    </div>

</body>


@code
{
    Order order = new Order();
    List<Order> orders = new List<Order>();

    protected override async Task OnInitializedAsync()
    {
        GetOrders();
    }

    private void GetOrders()
    {
        orders = orderService.GetOrders();
    }

    private void Save()
    {
        orderService.SaveOrUpdate(order);
        Reset();
        GetOrders();
    }

    private void Reset()
    {
        order = new Order();
    }

    private void Edit(string orderId)
    {
        order = orderService.GetOrder(orderId);
    }

    private void Delete(string orderId)
    {
        orderService.Delete(orderId);
        GetOrders();
    }
}
